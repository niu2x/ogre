//-----------------------------------------------------------------------------
// Program Name: SGXLib_IntegratedPSSM
// Program Desc: Integrated PSSM functions.
// Program Type: Vertex/Pixel shader
// Language: CG
//-----------------------------------------------------------------------------

//-----------------------------------------------------------------------------
void SGX_CopyDepth(in float4 clipSpacePos,
				 out float oDepth)
{
	oDepth = clipSpacePos.z;
}

//-----------------------------------------------------------------------------
void SGX_ModulateScalar(in float vIn0, in float4 vIn1, out float4 vOut)
{
	vOut = vIn0 * vIn1;
}
	
//-----------------------------------------------------------------------------
void SGX_ApplyShadowFactor_Diffuse(in float4 ambient, 
					  in float4 lightSum, 
					  in float fShadowFactor, 
					  out float4 oLight)
{
	oLight.rgb = ambient.rgb + (lightSum.rgb - ambient.rgb) * fShadowFactor;
	oLight.a   = lightSum.a;
}

//-----------------------------------------------------------------------------
void SGX_ComputeShadowFactor_PSSM3(in float fDepth,
							in float4 vSplitPoints,							
							in float4 lightPosition0,
							in float4 lightPosition1,
							in float4 lightPosition2,
							in sampler2D shadowMap0,
							in sampler2D shadowMap1,
							in sampler2D shadowMap2,
							out float oShadowFactor)
{
	if (fDepth  <= vSplitPoints.x)
	{													
		oShadowFactor = tex2Dproj(shadowMap0, lightPosition0).r;
	}
	else if (fDepth <= vSplitPoints.y)
	{											
		oShadowFactor = tex2Dproj(shadowMap1, lightPosition1).r;
	}
	else
	{										
		oShadowFactor = tex2Dproj(shadowMap2, lightPosition2).r;
	}
}