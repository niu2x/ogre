//---------------------------------------------------------------------------
//These materials/shaders are part of the NEW InstanceManager implementation
//Written by Matias N. Goldberg ("dark_sylinc")
//---------------------------------------------------------------------------


//--------------------------------------------------------------
// GLSL Programs
//--------------------------------------------------------------
vertex_program Ogre/Instancing/shadow_caster_glsl_vs glsl
{
	source ShaderInstancing.vert
	preprocessor_defines DEPTH_SHADOWCASTER=1

	includes_skeletal_animation true
}

vertex_program Ogre/Instancing/shadow_caster_dq_glsl_vs glsl
{
	source ShaderInstancing.vert

	preprocessor_defines ST_DUAL_QUATERNION,DEPTH_SHADOWCASTER=1

	includes_skeletal_animation true
}

vertex_program Ogre/Instancing/shadow_caster_dq_two_weights_glsl_vs glsl
{
	source ShaderInstancing.vert

	preprocessor_defines ST_DUAL_QUATERNION,BONE_TWO_WEIGHTS,DEPTH_SHADOWCASTER=1

	includes_skeletal_animation true
}

//--------------------------------------------------------------
// GLSL ES Programs
//--------------------------------------------------------------
vertex_program Ogre/Instancing/shadow_caster_glsles_vs glsles
{
	source ShaderInstancing.vert
	preprocessor_defines DEPTH_SHADOWCASTER=1

	includes_skeletal_animation true
}

vertex_program Ogre/Instancing/shadow_caster_dq_glsles_vs glsles
{
	source ShaderInstancing.vert

	preprocessor_defines ST_DUAL_QUATERNION,DEPTH_SHADOWCASTER=1

	includes_skeletal_animation true
}

vertex_program Ogre/Instancing/shadow_caster_dq_two_weights_glsles_vs glsles
{
	source ShaderInstancing.vert

	preprocessor_defines ST_DUAL_QUATERNION,BONE_TWO_WEIGHTS,DEPTH_SHADOWCASTER=1

	includes_skeletal_animation true
}

//--------------------------------------------------------------
// hlsl Programs
//--------------------------------------------------------------
vertex_program Ogre/Instancing/shadow_caster_hlsl_vs hlsl
{
	source ShaderInstancing.cg
	entry_point main_vs
	target vs_3_0
	
	preprocessor_defines DEPTH_SHADOWCASTER

	includes_skeletal_animation true
	column_major_matrices false
}

vertex_program Ogre/Instancing/shadow_caster_dq_hlsl_vs hlsl
{
	source ShaderInstancing.cg
	entry_point main_vs
	target vs_3_0
	
	preprocessor_defines DEPTH_SHADOWCASTER,ST_DUAL_QUATERNION

	includes_skeletal_animation true
	column_major_matrices false
}

vertex_program Ogre/Instancing/shadow_caster_dq_two_weights_hlsl_vs hlsl
{
	source ShaderInstancing.cg
	entry_point main_vs
	target vs_3_0
	
	preprocessor_defines DEPTH_SHADOWCASTER,ST_DUAL_QUATERNION,BONE_TWO_WEIGHTS

	includes_skeletal_animation true
	column_major_matrices false
}


//--------------------------------------------------------------
// CG Programs
//--------------------------------------------------------------
vertex_program Ogre/Instancing/shadow_caster_cg_vs cg
{
	source ShaderInstancing.cg
	entry_point main_vs
	profiles  vs_3_0 vs_2_0 vp40
	
	compile_arguments -DDEPTH_SHADOWCASTER

	includes_skeletal_animation true
}

vertex_program Ogre/Instancing/shadow_caster_dq_cg_vs cg
{
	source ShaderInstancing.cg
	entry_point main_vs
	profiles  vs_3_0 vs_2_0 vp40
	
	compile_arguments -DDEPTH_SHADOWCASTER -DST_DUAL_QUATERNION

	includes_skeletal_animation true
}

vertex_program Ogre/Instancing/shadow_caster_dq_two_weights_cg_vs cg
{
	source ShaderInstancing.cg
	entry_point main_vs
	profiles  vs_3_0 vs_2_0 vp40
	
	compile_arguments -DDEPTH_SHADOWCASTER -DST_DUAL_QUATERNION -DBONE_TWO_WEIGHTS

	includes_skeletal_animation true
}


//--------------------------------------------------------------
// Unified CG/GLSL Programs
//--------------------------------------------------------------
vertex_program Ogre/Instancing/shadow_caster_vs unified
{
	delegate Ogre/Instancing/shadow_caster_glsl_vs
	delegate Ogre/Instancing/shadow_caster_glsles_vs
	delegate Ogre/Instancing/shadow_caster_hlsl_vs
	delegate Ogre/Instancing/shadow_caster_cg_vs

	default_params
	{
		param_named_auto	viewProjMatrix				viewproj_matrix
		param_named_auto	worldMatrix3x4Array			world_matrix_array_3x4
	}
}

vertex_program Ogre/Instancing/shadow_caster_dq_vs unified
{
	delegate Ogre/Instancing/shadow_caster_dq_glsl_vs
	delegate Ogre/Instancing/shadow_caster_dq_glsles_vs
	delegate Ogre/Instancing/shadow_caster_dq_hlsl_vs
	delegate Ogre/Instancing/shadow_caster_dq_cg_vs

	default_params
	{
		param_named_auto	viewProjMatrix				viewproj_matrix
		param_named_auto 	worldDualQuaternion2x4Array 		world_dualquaternion_array_2x4
	}
}

vertex_program Ogre/Instancing/shadow_caster_dq_two_weights_vs unified
{
	delegate Ogre/Instancing/shadow_caster_dq_two_weights_glsl_vs
	delegate Ogre/Instancing/shadow_caster_dq_two_weights_glsles_vs
	delegate Ogre/Instancing/shadow_caster_dq_two_weights_hlsl_vs
	delegate Ogre/Instancing/shadow_caster_dq_two_weights_cg_vs

	default_params
	{
		param_named_auto	viewProjMatrix				viewproj_matrix
		param_named_auto 	worldDualQuaternion2x4Array 		world_dualquaternion_array_2x4

	}
}

material Examples/Instancing/ShaderBased/shadow_caster
{
	technique
	{
		pass
		{
			vertex_program_ref Ogre/Instancing/shadow_caster_vs
			{
			}
			fragment_program_ref Ogre/Instancing/shadow_caster_ps
			{
			}
		}
	}
}

material Examples/Instancing/ShaderBased/shadow_caster_dq
{
	technique
	{
		pass
		{
			vertex_program_ref Ogre/Instancing/shadow_caster_dq_vs
			{
			}
			fragment_program_ref Ogre/Instancing/shadow_caster_ps
			{
			}
		}
	}
}

material Examples/Instancing/ShaderBased/shadow_caster_dq_two_weights
{
	technique
	{
		pass
		{
			vertex_program_ref Ogre/Instancing/shadow_caster_dq_two_weights_vs
			{
			}
			fragment_program_ref Ogre/Instancing/shadow_caster_ps
			{
			}
		}
	}
}

material Examples/Instancing/RTSS/Robot
{
	technique
	{
		shadow_caster_material Examples/Instancing/ShaderBased/shadow_caster

		pass
		{
			specular	1 1 1 1 12.5

			texture_unit
			{
				texture		r2skin.jpg
			}

			rtshader_system
			{
				hardware_skinning 70 1 linear false false
			}
		}
	}
}

material Examples/Instancing/RTSS/Robot_dq
{
	technique
	{
		shadow_caster_material Examples/Instancing/ShaderBased/shadow_caster_dq

		pass
		{
			specular	1 1 1 1 12.5

			texture_unit
			{
				texture		r2skin.jpg
			}

			rtshader_system
			{
				hardware_skinning 80 1 dual_quaternion true false
			}
		}
	}
}

material Examples/Instancing/RTSS/spine_dq_two_weights
{
	technique
	{
		shadow_caster_material Examples/Instancing/ShaderBased/shadow_caster_dq_two_weights

		pass
		{
			diffuse		0.3 0.3 0.3
			specular	0.1 0.1 0.1 0.1 12.5

			texture_unit
			{
				texture		circuit.dds
			}

			rtshader_system
			{
				hardware_skinning 80 2 dual_quaternion true false
			}
		}
	}
}
